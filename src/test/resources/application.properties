# H2 
#servem para ativar o console web e para específicar um path para acessar respectivamente em http://localhost:8080/h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2
#criar o BD carros + driver de conexão c/ o H2 + credenciais de acesso + dialeto de comunicação
spring.datasource.url=jdbc:h2:mem:carros
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


#SQL.
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.initialization-mode=always
#create-drop = cria e depois apaga a tabela  + update = ñ apaga a tabela, apenas atualiza fazendo alter table caso mude algum atributo, 
#ele tb cria a tabela caso caso ñ exista (c/ é um banco em memória q só é usado p/ testes, ele sempre cria de novo a tabela) + se usar none
#ele ñ cria a tabela, vc terá q criar a tabela manulamente no banco ou usar o arquivo schema.sql
spring.jpa.hibernate.ddl-auto=update

# logging
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} - %msg%n
logging.level.org.hibernate.SQL=debug
